{
  "source": "doc/api/string_decoder.markdown",
  "modules": [
    {
      "textRaw": "StringDecoder",
      "name": "stringdecoder",
      "stability": 3,
      "stabilityText": "Stable",
      "desc": "<!--\nTo use this module, do `require('string_decoder')`. StringDecoder decodes a\nbuffer to a string. It is a simple interface to `buffer.toString()` but provides\nadditional support for utf8.\n-->\n\n<p>このモジュールを使用するには <code>require(&apos;string_decoder&apos;)</code> をします。\nStringDecoder はバッファから文字列にデコードします。\nこれは単純なインターフェース <code>buffer.toString()</code> ですが、\nUTF-8 を特別にサポートします。\n\n</p>\n<pre><code>var StringDecoder = require(&apos;string_decoder&apos;).StringDecoder;\nvar decoder = new StringDecoder(&apos;utf8&apos;);\n\nvar cent = new Buffer([0xC2, 0xA2]);\nconsole.log(decoder.write(cent));\n\nvar euro = new Buffer([0xE2, 0x82, 0xAC]);\nconsole.log(decoder.write(euro));</code></pre>\n",
      "classes": [
        {
          "textRaw": "Class: StringDecoder",
          "type": "class",
          "name": "StringDecoder",
          "desc": "<!--\nAccepts a single argument, `encoding` which defaults to `utf8`.\n-->\n\n<p>文字列の引数 <code>encoding</code> を受け取ります。デフォルトは <code>&apos;utf8&apos;</code> です。\n\n</p>\n",
          "methods": [
            {
              "textRaw": "StringDecoder.write(buffer)",
              "type": "method",
              "name": "write",
              "desc": "<!--\nReturns a decoded string.\n-->\n\n<p>デコードされた文字列を返します。\n</p>\n",
              "signatures": [
                {
                  "params": [
                    {
                      "name": "buffer"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "type": "module",
      "displayName": "StringDecoder"
    }
  ]
}
