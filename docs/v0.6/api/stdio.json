{
  "source": "doc/api/stdio.markdown",
  "globals": [
    {
      "textRaw": "console",
      "name": "console",
      "type": "global",
      "desc": "<!--\nFor printing to stdout and stderr.  Similar to the console object functions\nprovided by most web browsers, here the output is sent to stdout or stderr.\n-->\n\n<p>標準出力と標準エラーに出力するためのものです。\nほとんどのブラウザで提供されているコンソールオブジェクトと同様ですが、\n出力は標準出力か標準エラー出力に送られます。\n\n\n</p>\n",
      "methods": [
        {
          "textRaw": "console.log()",
          "type": "method",
          "name": "log",
          "desc": "<!--\nPrints to stdout with newline. This function can take multiple arguments in a\n`printf()`-like way. Example:\n-->\n\n<p>改行を伴って標準出力へプリントします。\nこの関数は <code>printf()</code> のように複数の引数を受け付けます。\n\n</p>\n<pre><code>console.log(&apos;count: %d&apos;, count);</code></pre>\n<!--\nIf formatting elements are not found in the first string then `util.inspect`\nis used on each argument.\nSee [util.format()](util.html#util.format) for more information.\n-->\n\n<p>最初の引数文字列からフォーマット要素が見つからなかった場合は、\n<code>util.inspect</code> が各引数に使われます。\nより詳細は <a href=\"util.html#util.format\">util.format()</a> を参照してください。\n\n</p>\n",
          "signatures": [
            {
              "params": []
            }
          ]
        },
        {
          "textRaw": "console.info()",
          "type": "method",
          "name": "info",
          "desc": "<!--\nSame as `console.log`.\n-->\n\n<p><code>console.log</code> と同じです。\n\n</p>\n",
          "signatures": [
            {
              "params": []
            }
          ]
        },
        {
          "textRaw": "console.warn()",
          "type": "method",
          "name": "warn",
          "desc": "<!--\nSame as `console.log` but prints to stderr.\n-->\n\n<p><code>console.log</code> と同様ですが、標準エラー出力にプリントします。\n\n</p>\n",
          "signatures": [
            {
              "params": []
            },
            {
              "params": []
            }
          ]
        },
        {
          "textRaw": "console.error()",
          "type": "method",
          "name": "error",
          "desc": "<!--\nSame as `console.log` but prints to stderr.\n-->\n\n<p><code>console.log</code> と同様ですが、標準エラー出力にプリントします。\n\n</p>\n",
          "signatures": [
            {
              "params": []
            }
          ]
        },
        {
          "textRaw": "console.dir(obj)",
          "type": "method",
          "name": "dir",
          "desc": "<!--\nUses `util.inspect` on `obj` and prints resulting string to stderr.\n-->\n\n<p><code>util.inspect</code> を使って <code>obj</code> を文字列化した結果を標準エラー出力にプリントします。\n\n</p>\n",
          "signatures": [
            {
              "params": [
                {
                  "name": "obj"
                }
              ]
            }
          ]
        },
        {
          "textRaw": "console.time(label)",
          "type": "method",
          "name": "time",
          "desc": "<!--\nMark a time.\n-->\n\n<p>タイマを作成します。\n\n\n</p>\n",
          "signatures": [
            {
              "params": [
                {
                  "name": "label"
                }
              ]
            }
          ]
        },
        {
          "textRaw": "console.timeEnd(label)",
          "type": "method",
          "name": "timeEnd",
          "desc": "<!--\nFinish timer, record output. Example\n-->\n\n<p>タイマを終了し、結果を出力します。例\n\n</p>\n<pre><code>console.time(&apos;100-elements&apos;);\nfor (var i = 0; i &lt; 100; i++) {\n  ;\n}\nconsole.timeEnd(&apos;100-elements&apos;);</code></pre>\n",
          "signatures": [
            {
              "params": [
                {
                  "name": "label"
                }
              ]
            }
          ]
        },
        {
          "textRaw": "console.trace()",
          "type": "method",
          "name": "trace",
          "desc": "<!--\nPrint a stack trace to stderr of the current position.\n-->\n\n<p>現在のスタックトレースを標準エラー出力にプリントします。\n\n</p>\n",
          "signatures": [
            {
              "params": []
            }
          ]
        },
        {
          "textRaw": "console.assert()",
          "type": "method",
          "name": "assert",
          "desc": "<!--\nSame as `assert.ok()`.\n-->\n\n<p><code>assert.ok()</code> と同じです。\n</p>\n",
          "signatures": [
            {
              "params": []
            }
          ]
        }
      ]
    }
  ]
}
